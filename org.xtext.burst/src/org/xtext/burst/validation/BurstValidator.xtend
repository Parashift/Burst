/*
 * generated by Xtext 2.11.0
 */
package org.xtext.burst.validation

import java.util.ArrayList
import java.util.HashSet
import java.util.List
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.validation.Check
import org.xtext.burst.burst.BurstPackage
import org.xtext.burst.burst.Concern
import org.xtext.burst.burst.Member
import org.xtext.burst.burst.File
import com.google.common.collect.HashMultimap
import org.eclipse.xtend.lib.macro.declaration.NamedElement
import org.xtext.burst.burst.Variable

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class BurstValidator extends AbstractBurstValidator {
	
	extension ConcernExtensions c = new ConcernExtensions ();
	
	public static String HIERARCHY_CYCLE = ""
	
	@Check
	def checkNoCycleInConcernHierachy(Member m) {
		val list = newHashSet()
		checkNoCycleInConcern(m.concern, list)
	}
		
	@Check
	def checkNoDuplicate(File f) {
		checkNoDuplicateElements(f.concerns, "concern")
	}
	
	/**
	 * We have to find how to use a "variable type" to generalize elements
	 */
	def checkNoDuplicateElements(List<? extends Variable> variables, String string) {
//		val multiMap = HashMultimap.create()
//		for(e : variables) {
//			multiMap.put(e,e)
//		}
	}
	
	@Check
	def void checkNoCycleInConcern(Concern c, HashSet<Concern> list) {
		for(Member m : c.members) {
			if(m.isContent) {
				if(list.contains(m.concern)) {
					error("Cycle in hierarchy of entity "+ m.concern.name, BurstPackage.Literals.MEMBER__CONCERN, HIERARCHY_CYCLE)
					return
				} else {
					val listUp = newHashSet(m.concern)
					listUp.addAll(list)
					checkNoCycleInConcern(m.concern, listUp)
				}
			}
		}
		return
	}
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					BurstPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
}

