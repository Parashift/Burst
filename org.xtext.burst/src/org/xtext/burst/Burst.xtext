grammar org.xtext.burst.Burst hidden(WS, ML_COMMENT, SL_COMMENT)


generate burst "http://www.xtext.org/burst/Burst"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

File: {File}
	ENDLINE* (Imports+=Import ENDLINE*)* (elements+=FileElement ENDLINE*)*;


FileElement:
	Roles | Package ;
	
	
Import:	{Import}
    'import' importedNamespace=QualifiedName;
    
Roles :{Role} 
	'role' name=ID;

Package: {Package}
	'package' name=QualifiedName (ENDLINE)* '{' (ENDLINE)* (elements+=PackageElement ENDLINE* )* '}';

PackageElement: 
	Concern | Template | RuleIntersect;
	
Concern :	{Concern}
	'concern' name=ID  ((ENDLINE)* '{' (ENDLINE)* (elements+=ConcernElement ENDLINE+)*  '}')?;

Template :	{Template}
	'template' name=ID '<' templateArguments+=[Concern] (',' templateArguments+=[Concern])* '>' 
	( (ENDLINE)* '{' (ENDLINE)* (elements+=ConcernElement ENDLINE+)*  '}')?;

ConcernElement:
	Member | RuleIntersect;
	
Member:		{Member}
	(actAs?='as')?
	(isContent?='is')? concern=[Concern|QualifiedName] name=ID;
	
RuleIntersect:  {Intersection}
	name= 'when' (ENDLINE)* params+=Parameter ( (ENDLINE)* (','|'and') (ENDLINE)* params+=Parameter  )* 
	('with'  (ENDLINE)* withParams+=WithParameter ( (ENDLINE)* (','|'and') (ENDLINE)* withParams+=WithParameter  )* )?
	 block=Block;
	 
Block : {Block}
	'{' (ENDLINE)* (lines+=Line (ENDLINE+ lines+=Line)* (ENDLINE)*)? '}';

Parameter: {Parameter}
	type=[Concern|QualifiedName] name=ID (usage?=':' role=[Role])?;
	
WithParameter: {WithParameter}
	name=ID /*[Concern|QualifiedName]*/ (usage?=':' role=[Role])?;
	
Variable: 
	Member | Parameter | WithParameter | Locale | Concern;
	
Line: 
	Block | Call | ContextManagement | If | Stop;

Stop: {Stop}
	'stop' (condition=Call)?;

If : {If}
	'if' expression=Call (thenBlock=Block | (ENDLINE)+ thenBlock=Line)
	(=> (ENDLINE)* 'else' (ENDLINE)* elseBlock=Line)?;
	
ContextManagement: {ContextManagement}
	action=concernManagment target=Access;

Call: {Call}
	content+=CallElement+ (equality?='=' source+=CallElement+)?;
	
CallElement: 
	(Locale | Access | SubCall | TerminalExpression);

Locale: {Locale}
	'new' type=[Concern|QualifiedName] name=ID (':' roles+=[Role])*;
	
Access: {Access}
	name=[Variable] ('.' members+=[Member])*  (':' roles+=[Role])*;

SubCall: {Call}
	'(' content+=Call ')' (':' roles+=[Role])*;

TerminalExpression:
	{IntConstant} value = INT|
	{StringConstant} value = STRING|
	{BoolConstant} value = ('true'|'false')|
	{DoubleConstant} value = INT '.' INT|
	{ThisConstant} value = 'this'|
	{NullConstant} value = 'null';	
	
enum concernManagment: 
	add = '1' | remove = '0'
;
	/* 

Destruct: {Destruct}
	name='dispose' '{' linesContent+=(Line)* '}' ; 

Build: {Build}
	name='new' '{' linesContent+=(Line)* '}' ;


*/
	
	
QualifiedName:
	ID( '.' ID)*;

terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal STRING	: 
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		; 
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS			: (' '|'\t' )+;
terminal ENDLINE    : '\r'? '\n';
terminal ANY_OTHER: .;