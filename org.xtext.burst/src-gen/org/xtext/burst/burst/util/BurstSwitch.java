/**
 * generated by Xtext 2.9.0
 */
package org.xtext.burst.burst.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.burst.burst.BurstPackage;
import org.xtext.burst.burst.Call;
import org.xtext.burst.burst.CallMember;
import org.xtext.burst.burst.CallParameterInConcern;
import org.xtext.burst.burst.Concern;
import org.xtext.burst.burst.ConcernElement;
import org.xtext.burst.burst.File;
import org.xtext.burst.burst.Import;
import org.xtext.burst.burst.Intersection;
import org.xtext.burst.burst.Line;
import org.xtext.burst.burst.Member;
import org.xtext.burst.burst.MemberCall;
import org.xtext.burst.burst.MemberInConcern;
import org.xtext.burst.burst.NamedParameter;
import org.xtext.burst.burst.PackageElement;
import org.xtext.burst.burst.Parameter;
import org.xtext.burst.burst.ParameterCall;
import org.xtext.burst.burst.RuleConcern;
import org.xtext.burst.burst.RuleFileElement;
import org.xtext.burst.burst.RuleImport;
import org.xtext.burst.burst.RuleIntersect;
import org.xtext.burst.burst.RulePackage;
import org.xtext.burst.burst.StaticParameter;
import org.xtext.burst.burst.UsageParameter;
import org.xtext.burst.burst.Variable;
import org.xtext.burst.burst.VariableCall;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.burst.burst.BurstPackage
 * @generated
 */
public class BurstSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BurstPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BurstSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = BurstPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case BurstPackage.FILE:
      {
        File file = (File)theEObject;
        T result = caseFile(file);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.RULE_FILE_ELEMENT:
      {
        RuleFileElement ruleFileElement = (RuleFileElement)theEObject;
        T result = caseRuleFileElement(ruleFileElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.RULE_IMPORT:
      {
        RuleImport ruleImport = (RuleImport)theEObject;
        T result = caseRuleImport(ruleImport);
        if (result == null) result = caseRuleFileElement(ruleImport);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.RULE_PACKAGE:
      {
        RulePackage rulePackage = (RulePackage)theEObject;
        T result = caseRulePackage(rulePackage);
        if (result == null) result = caseRuleFileElement(rulePackage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.PACKAGE_ELEMENT:
      {
        PackageElement packageElement = (PackageElement)theEObject;
        T result = casePackageElement(packageElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.RULE_CONCERN:
      {
        RuleConcern ruleConcern = (RuleConcern)theEObject;
        T result = caseRuleConcern(ruleConcern);
        if (result == null) result = casePackageElement(ruleConcern);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.CONCERN_ELEMENT:
      {
        ConcernElement concernElement = (ConcernElement)theEObject;
        T result = caseConcernElement(concernElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.MEMBER:
      {
        Member member = (Member)theEObject;
        T result = caseMember(member);
        if (result == null) result = caseConcernElement(member);
        if (result == null) result = caseVariable(member);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.RULE_INTERSECT:
      {
        RuleIntersect ruleIntersect = (RuleIntersect)theEObject;
        T result = caseRuleIntersect(ruleIntersect);
        if (result == null) result = casePackageElement(ruleIntersect);
        if (result == null) result = caseConcernElement(ruleIntersect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.VARIABLE:
      {
        Variable variable = (Variable)theEObject;
        T result = caseVariable(variable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.PARAMETER:
      {
        Parameter parameter = (Parameter)theEObject;
        T result = caseParameter(parameter);
        if (result == null) result = caseVariable(parameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.NAMED_PARAMETER:
      {
        NamedParameter namedParameter = (NamedParameter)theEObject;
        T result = caseNamedParameter(namedParameter);
        if (result == null) result = caseParameter(namedParameter);
        if (result == null) result = caseVariable(namedParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.STATIC_PARAMETER:
      {
        StaticParameter staticParameter = (StaticParameter)theEObject;
        T result = caseStaticParameter(staticParameter);
        if (result == null) result = caseParameter(staticParameter);
        if (result == null) result = caseVariable(staticParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.USAGE_PARAMETER:
      {
        UsageParameter usageParameter = (UsageParameter)theEObject;
        T result = caseUsageParameter(usageParameter);
        if (result == null) result = caseParameter(usageParameter);
        if (result == null) result = caseVariable(usageParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.LINE:
      {
        Line line = (Line)theEObject;
        T result = caseLine(line);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.CALL:
      {
        Call call = (Call)theEObject;
        T result = caseCall(call);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.MEMBER_CALL:
      {
        MemberCall memberCall = (MemberCall)theEObject;
        T result = caseMemberCall(memberCall);
        if (result == null) result = caseCall(memberCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.VARIABLE_CALL:
      {
        VariableCall variableCall = (VariableCall)theEObject;
        T result = caseVariableCall(variableCall);
        if (result == null) result = caseCall(variableCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.PARAMETER_CALL:
      {
        ParameterCall parameterCall = (ParameterCall)theEObject;
        T result = caseParameterCall(parameterCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.CALL_MEMBER:
      {
        CallMember callMember = (CallMember)theEObject;
        T result = caseCallMember(callMember);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.CALL_PARAMETER_IN_CONCERN:
      {
        CallParameterInConcern callParameterInConcern = (CallParameterInConcern)theEObject;
        T result = caseCallParameterInConcern(callParameterInConcern);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.IMPORT:
      {
        Import import_ = (Import)theEObject;
        T result = caseImport(import_);
        if (result == null) result = caseRuleImport(import_);
        if (result == null) result = caseRuleFileElement(import_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.PACKAGE:
      {
        org.xtext.burst.burst.Package package_ = (org.xtext.burst.burst.Package)theEObject;
        T result = casePackage(package_);
        if (result == null) result = caseRulePackage(package_);
        if (result == null) result = caseRuleFileElement(package_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.CONCERN:
      {
        Concern concern = (Concern)theEObject;
        T result = caseConcern(concern);
        if (result == null) result = caseRuleConcern(concern);
        if (result == null) result = casePackageElement(concern);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.INTERSECTION:
      {
        Intersection intersection = (Intersection)theEObject;
        T result = caseIntersection(intersection);
        if (result == null) result = caseRuleIntersect(intersection);
        if (result == null) result = casePackageElement(intersection);
        if (result == null) result = caseConcernElement(intersection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BurstPackage.MEMBER_IN_CONCERN:
      {
        MemberInConcern memberInConcern = (MemberInConcern)theEObject;
        T result = caseMemberInConcern(memberInConcern);
        if (result == null) result = caseCallParameterInConcern(memberInConcern);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFile(File object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule File Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule File Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRuleFileElement(RuleFileElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRuleImport(RuleImport object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule Package</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule Package</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRulePackage(RulePackage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Package Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Package Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePackageElement(PackageElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule Concern</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule Concern</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRuleConcern(RuleConcern object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Concern Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Concern Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConcernElement(ConcernElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Member</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Member</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMember(Member object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule Intersect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule Intersect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRuleIntersect(RuleIntersect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariable(Variable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParameter(Parameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Named Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Named Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNamedParameter(NamedParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Static Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Static Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStaticParameter(StaticParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Usage Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Usage Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUsageParameter(UsageParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Line</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Line</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLine(Line object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCall(Call object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Member Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Member Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMemberCall(MemberCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableCall(VariableCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parameter Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parameter Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParameterCall(ParameterCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Call Member</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Call Member</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCallMember(CallMember object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Call Parameter In Concern</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Call Parameter In Concern</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCallParameterInConcern(CallParameterInConcern object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImport(Import object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Package</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Package</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePackage(org.xtext.burst.burst.Package object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Concern</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Concern</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConcern(Concern object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Intersection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Intersection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntersection(Intersection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Member In Concern</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Member In Concern</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMemberInConcern(MemberInConcern object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //BurstSwitch
