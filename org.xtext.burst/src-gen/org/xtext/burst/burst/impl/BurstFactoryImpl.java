/**
 * generated by Xtext 2.9.0
 */
package org.xtext.burst.burst.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.burst.burst.BurstFactory;
import org.xtext.burst.burst.BurstPackage;
import org.xtext.burst.burst.Call;
import org.xtext.burst.burst.Concern;
import org.xtext.burst.burst.ConcernElement;
import org.xtext.burst.burst.ConcernParameter;
import org.xtext.burst.burst.ConcernParameterCall;
import org.xtext.burst.burst.DeclareMember;
import org.xtext.burst.burst.DeclareParameter;
import org.xtext.burst.burst.File;
import org.xtext.burst.burst.Import;
import org.xtext.burst.burst.Intersection;
import org.xtext.burst.burst.IntersectionElement;
import org.xtext.burst.burst.Line;
import org.xtext.burst.burst.Member;
import org.xtext.burst.burst.MemberCall;
import org.xtext.burst.burst.MemberInConcern;
import org.xtext.burst.burst.PackageElement;
import org.xtext.burst.burst.RenamedParameter;
import org.xtext.burst.burst.RenamedParameterCall;
import org.xtext.burst.burst.RuleConcern;
import org.xtext.burst.burst.RuleFileElement;
import org.xtext.burst.burst.RuleImport;
import org.xtext.burst.burst.RuleIntersect;
import org.xtext.burst.burst.RulePackage;
import org.xtext.burst.burst.toto;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BurstFactoryImpl extends EFactoryImpl implements BurstFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BurstFactory init()
  {
    try
    {
      BurstFactory theBurstFactory = (BurstFactory)EPackage.Registry.INSTANCE.getEFactory(BurstPackage.eNS_URI);
      if (theBurstFactory != null)
      {
        return theBurstFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BurstFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BurstFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BurstPackage.FILE: return createFile();
      case BurstPackage.RULE_FILE_ELEMENT: return createRuleFileElement();
      case BurstPackage.RULE_IMPORT: return createRuleImport();
      case BurstPackage.RULE_PACKAGE: return createRulePackage();
      case BurstPackage.PACKAGE_ELEMENT: return createPackageElement();
      case BurstPackage.RULE_CONCERN: return createRuleConcern();
      case BurstPackage.CONCERN_ELEMENT: return createConcernElement();
      case BurstPackage.DECLARE_MEMBER: return createDeclareMember();
      case BurstPackage.RULE_INTERSECT: return createRuleIntersect();
      case BurstPackage.DECLARE_PARAMETER: return createDeclareParameter();
      case BurstPackage.CONCERN_PARAMETER: return createConcernParameter();
      case BurstPackage.RENAMED_PARAMETER: return createRenamedParameter();
      case BurstPackage.INTERSECTION_ELEMENT: return createIntersectionElement();
      case BurstPackage.LINE: return createLine();
      case BurstPackage.CALL: return createCall();
      case BurstPackage.TOTO: return createtoto();
      case BurstPackage.RENAMED_PARAMETER_CALL: return createRenamedParameterCall();
      case BurstPackage.CONCERN_PARAMETER_CALL: return createConcernParameterCall();
      case BurstPackage.MEMBER_CALL: return createMemberCall();
      case BurstPackage.MEMBER_IN_CONCERN: return createMemberInConcern();
      case BurstPackage.IMPORT: return createImport();
      case BurstPackage.PACKAGE: return createPackage();
      case BurstPackage.CONCERN: return createConcern();
      case BurstPackage.MEMBER: return createMember();
      case BurstPackage.INTERSECTION: return createIntersection();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public File createFile()
  {
    FileImpl file = new FileImpl();
    return file;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleFileElement createRuleFileElement()
  {
    RuleFileElementImpl ruleFileElement = new RuleFileElementImpl();
    return ruleFileElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleImport createRuleImport()
  {
    RuleImportImpl ruleImport = new RuleImportImpl();
    return ruleImport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RulePackage createRulePackage()
  {
    RulePackageImpl rulePackage = new RulePackageImpl();
    return rulePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackageElement createPackageElement()
  {
    PackageElementImpl packageElement = new PackageElementImpl();
    return packageElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleConcern createRuleConcern()
  {
    RuleConcernImpl ruleConcern = new RuleConcernImpl();
    return ruleConcern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConcernElement createConcernElement()
  {
    ConcernElementImpl concernElement = new ConcernElementImpl();
    return concernElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeclareMember createDeclareMember()
  {
    DeclareMemberImpl declareMember = new DeclareMemberImpl();
    return declareMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleIntersect createRuleIntersect()
  {
    RuleIntersectImpl ruleIntersect = new RuleIntersectImpl();
    return ruleIntersect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeclareParameter createDeclareParameter()
  {
    DeclareParameterImpl declareParameter = new DeclareParameterImpl();
    return declareParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConcernParameter createConcernParameter()
  {
    ConcernParameterImpl concernParameter = new ConcernParameterImpl();
    return concernParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RenamedParameter createRenamedParameter()
  {
    RenamedParameterImpl renamedParameter = new RenamedParameterImpl();
    return renamedParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntersectionElement createIntersectionElement()
  {
    IntersectionElementImpl intersectionElement = new IntersectionElementImpl();
    return intersectionElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Line createLine()
  {
    LineImpl line = new LineImpl();
    return line;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Call createCall()
  {
    CallImpl call = new CallImpl();
    return call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public toto createtoto()
  {
    totoImpl toto = new totoImpl();
    return toto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RenamedParameterCall createRenamedParameterCall()
  {
    RenamedParameterCallImpl renamedParameterCall = new RenamedParameterCallImpl();
    return renamedParameterCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConcernParameterCall createConcernParameterCall()
  {
    ConcernParameterCallImpl concernParameterCall = new ConcernParameterCallImpl();
    return concernParameterCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemberCall createMemberCall()
  {
    MemberCallImpl memberCall = new MemberCallImpl();
    return memberCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemberInConcern createMemberInConcern()
  {
    MemberInConcernImpl memberInConcern = new MemberInConcernImpl();
    return memberInConcern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.xtext.burst.burst.Package createPackage()
  {
    PackageImpl package_ = new PackageImpl();
    return package_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Concern createConcern()
  {
    ConcernImpl concern = new ConcernImpl();
    return concern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Member createMember()
  {
    MemberImpl member = new MemberImpl();
    return member;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Intersection createIntersection()
  {
    IntersectionImpl intersection = new IntersectionImpl();
    return intersection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BurstPackage getBurstPackage()
  {
    return (BurstPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BurstPackage getPackage()
  {
    return BurstPackage.eINSTANCE;
  }

} //BurstFactoryImpl
