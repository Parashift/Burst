/*
 * generated by Xtext 2.11.0
 */
package org.xtext.burst.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.xtext.burst.burst.Intersection
import org.xtext.burst.burst.Parameter
import org.xtext.burst.burst.Concern
import org.xtext.burst.burst.Member

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class BurstLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}


def text(Intersection i) {
	var text = 'When'
	if(i.eContainer instanceof Concern) {
		text = text.concat(" "+(i.eContainer as Concern).name)
	}
	for (Parameter p :i.params) {
		text = text.concat(" "+p.type.name)
	}
	return text
}

def text(Member m) {
	var text = ""
	if(m.isIsContent) {
		text = "is "
	}
	text += m.name + " : "
	if(m.actAs) {
		text += "as "
	}
	return text+m.concern.name 
}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
